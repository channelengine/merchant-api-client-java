/*
 * ChannelEngine Merchant API
 * ChannelEngine API for merchants
 *
 * The version of the OpenAPI document: 2.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.channelengine.merchant.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.channelengine.merchant.apiclient.model.ChannelChannelResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ChannelGlobalChannelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ChannelGlobalChannelResponse {
  public static final String SERIALIZED_NAME_COUNTRY_CODE = "CountryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_GLOBAL_CHANNEL_ID = "GlobalChannelId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CHANNEL_ID)
  private Integer globalChannelId;

  public static final String SERIALIZED_NAME_CHANNELS = "Channels";
  @SerializedName(SERIALIZED_NAME_CHANNELS)
  private List<ChannelChannelResponse> channels = null;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_GLOBAL_CHANNEL_NAME = "GlobalChannelName";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CHANNEL_NAME)
  private String globalChannelName;


  public ChannelGlobalChannelResponse countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The country code of the Global Channel.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country code of the Global Channel.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public ChannelGlobalChannelResponse globalChannelId(Integer globalChannelId) {
    
    this.globalChannelId = globalChannelId;
    return this;
  }

   /**
   * The ID of the Global Channel.
   * @return globalChannelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Global Channel.")

  public Integer getGlobalChannelId() {
    return globalChannelId;
  }


  public void setGlobalChannelId(Integer globalChannelId) {
    this.globalChannelId = globalChannelId;
  }


  public ChannelGlobalChannelResponse channels(List<ChannelChannelResponse> channels) {
    
    this.channels = channels;
    return this;
  }

  public ChannelGlobalChannelResponse addChannelsItem(ChannelChannelResponse channelsItem) {
    if (this.channels == null) {
      this.channels = new ArrayList<ChannelChannelResponse>();
    }
    this.channels.add(channelsItem);
    return this;
  }

   /**
   * The status of the instances.
   * @return channels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of the instances.")

  public List<ChannelChannelResponse> getChannels() {
    return channels;
  }


  public void setChannels(List<ChannelChannelResponse> channels) {
    this.channels = channels;
  }


  public ChannelGlobalChannelResponse languageCode(String languageCode) {
    
    this.languageCode = languageCode;
    return this;
  }

   /**
   * The language code of the Global Channel.
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The language code of the Global Channel.")

  public String getLanguageCode() {
    return languageCode;
  }


  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public ChannelGlobalChannelResponse globalChannelName(String globalChannelName) {
    
    this.globalChannelName = globalChannelName;
    return this;
  }

   /**
   * The name of the Global Channel.
   * @return globalChannelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the Global Channel.")

  public String getGlobalChannelName() {
    return globalChannelName;
  }


  public void setGlobalChannelName(String globalChannelName) {
    this.globalChannelName = globalChannelName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelGlobalChannelResponse channelGlobalChannelResponse = (ChannelGlobalChannelResponse) o;
    return Objects.equals(this.countryCode, channelGlobalChannelResponse.countryCode) &&
        Objects.equals(this.globalChannelId, channelGlobalChannelResponse.globalChannelId) &&
        Objects.equals(this.channels, channelGlobalChannelResponse.channels) &&
        Objects.equals(this.languageCode, channelGlobalChannelResponse.languageCode) &&
        Objects.equals(this.globalChannelName, channelGlobalChannelResponse.globalChannelName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, globalChannelId, channels, languageCode, globalChannelName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelGlobalChannelResponse {\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    globalChannelId: ").append(toIndentedString(globalChannelId)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    globalChannelName: ").append(toIndentedString(globalChannelName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

